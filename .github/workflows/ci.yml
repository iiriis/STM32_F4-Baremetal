name: Build STM32F4 Project

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Runner environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 1: Cache ARM toolchain to speed up future builds
    - name: Cache ARM toolchain
      uses: actions/cache@v2
      with:
        path: /usr/local/bin/gcc-arm-none-eabi
        key: ${{ runner.os }}-gcc-arm-none-eabi-toolchain
        restore-keys: |
          ${{ runner.os }}-gcc-arm-none-eabi-toolchain

    # Step 2: Install ARM toolchain if not already cached
    - name: Set up ARM toolchain
      run: |
        if [ ! -f /usr/local/bin/gcc-arm-none-eabi ]; then
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi make
        fi

    # Step 3: Build the STM32 project
    - name: Build STM32 project
      run: |
        make  # Replace with cmake if your project uses CMake

    # Step 4: Check if the build artifact exists and print status
    - name: Check build artifacts
      run: |
        if [ -f build/binaries/firmware.elf ]; then
          echo "Build successful!"
        else
          echo "Build failed!" && exit 1
        fi
